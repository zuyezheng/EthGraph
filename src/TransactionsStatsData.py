import pandas

from src.TimeSpan import TimeSpan

class TransactionsStatsData:
    """
    Load transactions stats generated by EthTransactions.

    @author zuye.zheng
    """

    METRICS = [
        'sum_value',
        'stdev_value',
        'skewness_value',
        'kurtosis_value',
        'sum_gas',
        'stdev_gas',
        'skewness_gas',
        'kurtosis_gas',
        'num_blocks',
        'num_froms',
        'num_tos',
        'num_transactions'
    ]

    def __init__(self,
        loc: str,
        span: TimeSpan,
        min_time_step: int = None,
        max_time_step: int = None
    ):
        self.span = span

        # load the transactions and do any necessary clipping
        self.stats = pandas.read_parquet(loc)
        if min_time_step is not None:
            self.stats = self.stats[self.stats['time_span'] >= min_time_step]
        if max_time_step is not None:
            self.stats = self.stats[self.stats['time_span'] <= max_time_step]

        # standardize all of the metrics
        for metric in TransactionsStatsData.METRICS:
            metric_mean = self.stats[metric].mean()
            metric_std = self.stats[metric].std()

            self.stats[metric + '_s'] = (self.stats[metric] - metric_mean) / metric_std
